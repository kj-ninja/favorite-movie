{"version":3,"sources":["Components/Navigation.js","Components/Search.js","Actions/index.js","Components/SingleMovie.js","Components/Movies.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["className","Search","dispatch","useState","movie","setMovie","searching","setSearching","onSubmit","e","preventDefault","data","api_key","include_adult","query","language","urlData","URLSearchParams","Object","entries","fetch","then","r","ok","json","Error","results","length","type","payload","catch","error","id","placeholder","value","onChange","target","role","aria-hidden","poster_path","src","title","overview","vote_average","movies","map","SingleMovie","key","App","setMovies","setError","Navigation","href","action","console","warn","message","Movies","Footer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe943d9b.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default () => {\n  return (\n    <nav className=\"navbar navbar-light bg-white border-bottom shadow-sm\">\n      <span className=\"navbar-brand mb-0 h1\">MoviesDB</span>\n    </nav>\n  );\n};\n\n","import React, {useState} from \"react\";\nimport {MOVIES_FETCH, MOVIES_FETCH_ERROR} from \"../Actions\";\n\n\nconst Search = ({dispatch}) => {\n  const [movie, setMovie] = useState(\"\");\n  const [searching, setSearching] = useState(false);\n\n  const API = \"https://api.themoviedb.org/3/search/movie\";\n\n  const getMovie = e => {\n    e.preventDefault();\n    setSearching(true);\n\n    const data = {\n      api_key: \"1f6701f4695b66698a043fb831db39e9\",\n      include_adult: false,\n      query: movie,\n      language: \"pl-PL\"\n    };\n    const urlData = new URLSearchParams(Object.entries(data));\n\n    fetch(`${API}?${urlData}`)\n      .then(r => {\n        if (r.ok) return r.json();\n        throw new Error(\"Błąd pobrania danych!\");\n      })\n      .then(data => {\n        if (data.results.length === 0)\n          throw new Error(\"Brak filmów o podanej nazwie!\");\n\n        setSearching(false);\n        dispatch({\n          type: MOVIES_FETCH,\n          payload: data.results\n        });\n      })\n      .catch(error => {\n        dispatch({\n          type: MOVIES_FETCH_ERROR,\n          payload: error\n        });\n        setSearching(false);\n      });\n  };\n\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <form className=\"form-inline mt-3\" onSubmit={getMovie}>\n        <input className=\"form-control mr-sm-2\" type=\"search\" id=\"movie\" placeholder=\"Znajdź film\" value={movie}\n               onChange={(e) => {\n                 setMovie(e.target.value);\n               }}/>\n        <button className=\"btn btn-primary my-2 my-sm-0\" type=\"submit\">\n          {searching ? (\n            <>\n              <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"/>\n              Szukam...\n            </>\n          ) : (\n            <span>Szukaj</span>\n          )}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Search;\n","export const MOVIES_FETCH = \"MOVIES_FETCH\";\nexport const MOVIES_FETCH_ERROR = \"MOVIES_FETCH_ERROR\";\n","import React from \"react\";\n\nexport default ({movie}) => {\n  if (movie.poster_path === null) return null;\n\n  return (\n    <div className=\"col-md-4\">\n      <div className=\"card mb-4 shadow-sm\">\n        <img src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} className=\"bd-placeholder-img card-img-top\"/>\n        <div className=\"card-body\">\n          <h4>{movie.title}</h4>\n          <p className=\"card-text\">{movie.overview} </p>\n          <div className=\"d-flex justify-content-between align-items-center\">\n            <small className=\"text-muted\">{movie.vote_average}/10</small>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport SingleMovie from \"./SingleMovie\";\n\nexport default ({movies}) => {\n  return (\n    <div className=\"py-5 mb-5 bg-light\">\n      <div className=\"container\">\n        <div className=\"row\">\n          {movies.map(movie => <SingleMovie movie={movie} key={movie.id}/>)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <footer>\n      <div className=\"container border-top pt-4\">\n        <p>MoviesDB &copy; 2019</p>\n        <p className=\"small text-muted\">\n          Jest to przykładowa aplikacja napisana w React! Skoro ją widzisz, to znaczy, że konfiguracja środowiska\n          została wykonana prawidłowo!\n        </p>\n      </div>\n    </footer>\n  );\n}\n","import React, {useState} from \"react\";\nimport {MOVIES_FETCH, MOVIES_FETCH_ERROR} from \"./Actions\";\nimport Navigation from \"./Components/Navigation\";\nimport Search from \"./Components/Search\";\nimport Movies from \"./Components/Movies\";\nimport Footer from \"./Components/Footer\";\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(false);\n\n  const dispatch = (action) => {\n    switch (action.type) {\n      case MOVIES_FETCH: {\n        setMovies(action.payload);\n        setError(false);\n        break;\n      }\n\n      case MOVIES_FETCH_ERROR: {\n        setMovies([]);\n        setError(action.payload);\n        break;\n      }\n\n      default:\n        console.warn(\"You should specify action type.\");\n    }\n  };\n\n  return (\n    <>\n      <Navigation/>\n\n      <div className=\"jumbotron jumbotron-fluid\">\n        <div className=\"container\">\n          <h1 className=\"display-4\">Twoja baza filmów</h1>\n          <p className=\"lead\">\n            Wyszukuj swoje ulubione filmy. Dane dostarcza <a href=\"https://www.themoviedb.org\" target=\"_blank\">The Movie\n            DB</a>.\n          </p>\n        </div>\n      </div>\n\n      <div className=\"container py-5\">\n        <div className=\"row\">\n          <div className=\"col-md text-center\">\n            <h3 className=\"lead\">Znajdź swój ulubiony film!</h3>\n            <Search dispatch={dispatch}/>\n          </div>\n        </div>\n      </div>\n\n      {error !== false && <div className=\"col-md text-center\"><h3>{error.message}</h3></div>}\n      {movies.length === 0 ? null : <Movies movies={movies}/>}\n      <Footer/>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}